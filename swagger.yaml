---
swagger: "2.0"
info:
  description: "This is a Movie App server."
  version: 1.0.0
  title: Movie App
  contact:
    email: 20091632@wit.ie
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: localhost:8080
basePath: /api
tags:
- name: movies
  description: Everything about movies
- name: upcoming
  description: About upcoming movies
- name: authentication
  description: Login or register
- name: users
  description: Operations about user
- name: genres
  description: Access to genres
- name: nowplaying
  description: About upcoming movies
- name: toprated
  description: About upcoming movies


schemes:
- https
- http
paths:
  /movies:
    get:
      tags:
      - movies
      summary: get movies from database
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Movie'
    post:
      tags:
      - movies
      summary: post a movie to database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: title
          in: body
          description: Movie's title
          required: true
          type: string
        - name: id
          in: body
          description: Movie's id
          required: false
          type: string
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        "412":
          description: No title.
  /movies/{id}:
    get:
      tags:
      - movies
      summary: get a movie by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: Movie's id
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        "404":
          description: Invaild id or no this movie.
    put:
      tags:
      - movies
      summary: update a movie by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: Movie's id
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Movie'
        "404":
          description: Invaild id or no this movie.
    delete:
      tags:
      - movies
      summary: delete a movie by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: Movie's id
          required: true
          type: integer
      responses:
        "200":
          description: Success
        "404":
          description: Invaild id or no this movie.
  /movies/{id}/reviews:
    get:
      tags:
      - movies
      summary: get reviews of a specific movie
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: Movie's id
          required: true
          type: integer
      responses:
        "200":
          description: Success
        "404":
          description: Invaild id or no this movie, or no reviews on this movie.
  /upcoming:
    get:
      tags:
      - upcoming
      summary: get upcoming movies from database
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Upcoming'
        "401":
          description: Unauthorised. 
      security:
      - Bearer and jwt stragies: []
    post:
      tags:
      - upcoming
      summary: post a movie to upcoming list database
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: title
          in: body
          description: Movie's title
          required: true
          type: string
        - name: id
          in: body
          description: Movie's id
          required: false
          type: string
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/Upcoming'
        "401":
          description: Unauthorised. 
        "412":
          description: No title.
      security:
      - Bearer and jwt stragies: []
  /upcoming/{id}:
    get:
      tags:
      - upcoming
      summary: get an upcoming movie by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: Movie's id
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/Upcoming'
        "401":
          description: Unauthorised. 
        "404":
          description: Invaild id or no this movie.
      security:
      - Bearer and jwt stragies: []
    delete:
      tags:
      - upcoming
      summary: delete a movie from upcoming list by id
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          description: Movie's id
          required: true
          type: integer
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorised. 
        "404":
          description: Invaild id or no this movie.
      security:
      - Bearer and jwt stragies: []
  /authentication:
    post:
      tags:
      - authentication
      summary: login in or register
      consumes:
      - application/json
      produces:
      - application/json
      parameters: 
        - name: username
          in: body
          description: User's name
          required: true
          type: string
        - name: password
          in: body
          description: User's password
          required: true
          type: string
          schema:
            type: object
            example: {
              username: user1,password: test1,
            }
        - name: action
          in: query
          description: action
          required: false
          type: string
          enum:
          - register
      responses:
        "200":
          description: Log in successfully
          schema:
            type: object
            example: {"success": true,"token": "BEARER dwyuifbgquiwfw123t7126ert4dfg8"}
        "201":
          description: Register sucessfully
        "401":
          description: Authentication failed
        "412":
          description: Register failed
  /users:
    get:
      tags:
      - users
      summary: get users from database
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  /users/{username}:    
    get:
      tags:
      - users
      summary: get a user by username
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/User'
        "404":
          description: No this user
    put:
      tags:
      - users
      summary: update a user by username
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: No this user
    delete:
      tags:
      - users
      summary: delete a user by username
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: No this user
  /users/{username}/favourites:
    get:
      tags:
      - users
      summary: get a specific user's favourite movies
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: No this user
    post:
      tags:
      - users
      summary: add movie to a specific user's favourite movies
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
        - name: id
          in: body
          description: Movie's id
          required: true
          type: string
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Invaild movie id or no this movie
        "404":
          description: No this user
  /users/{username}/favourites/{id}:
    delete:
      tags:
      - users
      summary: delete a movie from a specific user's favourite movies list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
        - name: id
          in: path
          description: Movie's id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: No this user or movie
  /users/{username}/watchlist:
    get:
      tags:
      - users
      summary: get a specific user's movies in watch list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: No this user
    post:
      tags:
      - users
      summary: add movie to a specific user's watch list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
        - name: id
          in: body
          description: Movie's id
          required: true
          type: string
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Invaild movie id or no this movie
        "404":
          description: No this user
  /users/{username}/watchlist/{id}:
    delete:
      tags:
      - users
      summary: delete a movie from a specific user's watch list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: username
          in: path
          description: User's name
          required: true
          type: string
        - name: id
          in: path
          description: Movie's id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "404":
          description: No this user or movie
  /genres:
    get:
      tags:
      - genres
      summary: get genres
      consumes:
      - application/json
      produces:
      - application/json
      parameters: {}
      responses:
        "200":
          description: Success
  /nowplaying:
    get:
      tags:
      - nowplaying
      summary: get nowplaying movies
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Movie'
  /toprated:
    get:
      tags:
      - toprated
      summary: get toprated movies
      consumes:
      - application/json
      produces:
      - application/json
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Movie'
              
securityDefinitions:
  Bearer:
    type: apiKey
    name: jwt
    in: header

definitions:
  Movie:
    type: object
    required:
    - id
    properties:
      adult:
        type: boolean
      id:
        type: number
        format: int64
      poster_path:
        type: string
      overview:
        type: string
        example: it's a good one
      release_date:
        type: string
        format: date
      original_title:
        type: string
      genre_ids:
        type: array
        items:
          type: number
      original_language:
        type: string
      title:
        type: string
      backdrop_path:
        type: string
      popularity:
        type: number
      vote_count:
        type: number
      video:
        type: boolean
      vote_average:
        type: number
      production_countries:
        $ref: '#/definitions/production_countries'
      runtime:
        type: number
      spoken_languages:
        $ref: '#/definitions/spoken_languages'
      status:
        type: string
      tagline:
        type: string
    xml:
      name: Movie
  Upcoming:
    type: object
    required:
    - id
    properties:
      adult:
        type: boolean
      id:
        type: number
        format: int64
      poster_path:
        type: string
      overview:
        type: string
        example: it's a good one
      release_date:
        type: string
        format: date
      original_title:
        type: string
      genre_ids:
        type: array
        items:
          type: number
      original_language:
        type: string
      title:
        type: string
      backdrop_path:
        type: string
      popularity:
        type: number
      vote_count:
        type: number
      video:
        type: boolean
      vote_average:
        type: number
      production_countries:
        $ref: '#/definitions/production_countries'
      runtime:
        type: number
      spoken_languages:
        $ref: '#/definitions/spoken_languages'
      status:
        type: string
      tagline:
        type: string
    xml:
      name: Upcoming
  NowPlaying:
    type: object
    required:
    - id
    properties:
      adult:
        type: boolean
      id:
        type: number
        format: int64
      poster_path:
        type: string
      overview:
        type: string
        example: it's a good one
      release_date:
        type: string
        format: date
      original_title:
        type: string
      genre_ids:
        type: array
        items:
          type: number
      original_language:
        type: string
      title:
        type: string
      backdrop_path:
        type: string
      popularity:
        type: number
      vote_count:
        type: number
      video:
        type: boolean
      vote_average:
        type: number
      production_countries:
        $ref: '#/definitions/production_countries'
      runtime:
        type: number
      spoken_languages:
        $ref: '#/definitions/spoken_languages'
      status:
        type: string
      tagline:
        type: string
  TopRated:
    type: object
    required:
    - id
    properties:
      adult:
        type: boolean
      id:
        type: number
        format: int64
      poster_path:
        type: string
      overview:
        type: string
        example: it's a good one
      release_date:
        type: string
        format: date
      original_title:
        type: string
      genre_ids:
        type: array
        items:
          type: number
      original_language:
        type: string
      title:
        type: string
      backdrop_path:
        type: string
      popularity:
        type: number
      vote_count:
        type: number
      video:
        type: boolean
      vote_average:
        type: number
      production_countries:
        $ref: '#/definitions/production_countries'
      runtime:
        type: number
      spoken_languages:
        $ref: '#/definitions/spoken_languages'
      status:
        type: string
      tagline:
        type: string
  User:
    type: object
    required:
    - password
    - username
    properties:
      username:
        type: string
      password:
        type: string
      favourites:
        type: array
        items: 
          $ref: '#/definitions/Movie'
      watchlist:
        type: array
        items: 
          $ref: '#/definitions/Upcoming'
    xml:
      name: User
  production_countries:
    type: object
    properties:
      iso_3166_1:
        type: string
      name:
        type: string
  spoken_languages:
    type: object
    properties:
      iso_639_1:
        type: string
      name:
        type: string
